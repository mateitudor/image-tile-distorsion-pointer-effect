const canvas=document.getElementById("canvas"),context=canvas.getContext("2d"),img=new Image;let tileData=[],mouseX=0,mouseY=0,introDone=!1,lastMoveTimestamp=0,idleTimer=null;const introTileCount=240,maxDistortion=340,easing=.075,easingFast=.3,radius=5,idleTimeout=2e3;function easeInOutCubic(t){return t<.5?4*t*t*t:1-Math.pow(-2*t+2,3)}function easeOutCubic(t){return 1-Math.pow(1-t,3)}function resizeCanvas(){canvas.width=window.innerWidth,canvas.height=img.height*(canvas.width/img.width);const t=Math.floor(canvas.width/20);tileData.length=0;for(let e=0;e<canvas.height;e+=t)for(let i=0;i<canvas.width;i+=t)tileData.push({x:i,y:e,srcX:i*(img.width/canvas.width),srcY:e*(img.height/canvas.height),dist:0,distortion:0,size:t,lastUpdate:performance.now()})}function updateTiles(){const t=performance.now();let e=!1;t-lastMoveTimestamp>=idleTimeout&&(e=!0);for(let i=0;i<tileData.length;i++){const a=tileData[i],n=a.x+a.size/2,o=a.y+a.size/2,s=Math.sqrt((n-mouseX)**2+(o-mouseY)**2);let r=0;s<=radius*a.size&&(r=(1-s/(radius*a.size))*maxDistortion);const c=s<=radius*a.size?easingFast:easing;if(a.distortion+=(r-a.distortion)*c,e&&introDone){const e=easeOutCubic(Math.min((t-lastMoveTimestamp-idleTimeout)/1e3,1));a.distortion+=(0-a.distortion)*e}a.lastUpdate=t}requestAnimationFrame(updateTiles)}function render(){context.clearRect(0,0,canvas.width,canvas.height),context.drawImage(img,0,0,canvas.width,canvas.height);for(let t=0;t<tileData.length;t++){const e=tileData[t],i=e.distortion,a=easeInOutCubic(Math.min((performance.now()-e.lastUpdate)/1e3,1));e.distortion+=(i-e.distortion)*a,context.drawImage(img,e.srcX+e.distortion,e.srcY+e.distortion,e.size*(img.width/canvas.width),e.size*(img.height/canvas.height),e.x,e.y,e.size,e.size)}requestAnimationFrame(render)}function initialize(){const t=["01","02","03","04"],e=t[Math.floor(Math.random()*t.length)];img.src=`./img/frame_film-hero-${e}.jpg`,img.onload=function(){resizeCanvas(),window.addEventListener("resize",resizeCanvas),canvas.addEventListener("mousemove",(function(t){const e=canvas.getBoundingClientRect();mouseX=t.clientX-e.left,mouseY=t.clientY-e.top,lastMoveTimestamp=performance.now()}));for(let t=0;t<240;t++){const t=Math.floor(Math.random()*tileData.length);tileData[t].distortion=maxDistortion*(Math.random()>.5?1:-1)}introDone=!0,updateTiles(),render()}}initialize();